name: SonarQube
on:
  push:
    branches:
      - main
  pull_request:
    types: [opened, synchronize, reopened]
jobs:
  build:
    name: Build and analyze
    runs-on: ubuntu-latest
    steps:
      - name: Set up Docker
        run: |
          docker version
          docker pull postgres:17 --platform=linux/amd64
          docker pull scireum/s3-ninja:8.5.0 --platform=linux/amd64
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: 17
          distribution: 'zulu' # Alternative distribution options are available.
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis
      - name: Cache SonarQube Cloud packages
        uses: actions/cache@v4
        with:
          path: ~\sonar\cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar
      - name: Cache SonarQube Cloud scanner
        id: cache-sonar-scanner
        uses: actions/cache@v4
        with:
          path: .\.sonar\scanner
          key: ${{ runner.os }}-sonar-scanner
          restore-keys: ${{ runner.os }}-sonar-scanner
      - name: Install SonarCloud scanner
        if: steps.cache-sonar-scanner.outputs.cache-hit != 'true'
        run: |
          dotnet tool install --global dotnet-sonarscanner
      - name: Build and analyze
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: |
          dotnet-sonarscanner begin /k:"MadWorldNL_MadTransfer" /o:"madworldnl" /d:sonar.token="${{ secrets.SONAR_TOKEN }} /d:sonar.coverage.exclusions="**Test*.cs" /d:sonar.exclusions="**/MadWorldNL.MadTransfer.Controllers.Web/wwwroot/lib/**"
          dotnet restore
          dotnet build --no-restore -c Release
          dotnet test ./src/MadWorldNL.MantaRayPlan.sln --no-build --no-restore -c Release --blame-hang-timeout 5min
          dotnet-sonarscanner end /d:sonar.token="${{ secrets.SONAR_TOKEN }}"