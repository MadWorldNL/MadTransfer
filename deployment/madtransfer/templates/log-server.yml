{{- $loggerSecrets := (lookup "v1" "Secret" .Values.namespace .Values.logger.secret.name ) -}}
apiVersion: v1
kind: Secret
metadata:
  name: {{ .Values.logger.secret.name }}
  namespace: {{ .Values.namespace }}
type: Opaque
data:
{{- if and $loggerSecrets $loggerSecrets.data }}
  {{- if $loggerSecrets.data.apikeyapi }}
  apikeyapi: {{ $loggerSecrets.data.apikeyapi }}
    {{- else }}
  apikeyapi: {{ .Values.logger.secret.apiKeys.api | b64enc }}
    {{- end }}
  {{- else }}
  apikeyapi: {{ .Values.logger.secret.apiKeys.api | b64enc }}
{{- end }}
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: {{ .Values.logger.persistentVolumeClaim.name }}
  namespace: {{ .Values.namespace }}
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: {{ .Values.logger.persistentVolumeClaim.size }} 
---
{{- if .Values.logger.enabled }}
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ .Values.logger.deployment }}
  namespace: {{ .Values.namespace }}
  labels:
    app: {{ .Values.logger.app }}
spec:
  replicas: 1
  selector:
    matchLabels:
      app: {{ .Values.logger.app }}
      task: {{ .Values.logger.app }}
  template:
    metadata:
      labels:
        app: {{ .Values.logger.app }}
        task: {{ .Values.logger.app }}
    spec:
      automountServiceAccountToken: false
      resources:
        requests:
          memory: "200Mi"
          cpu: 20m
        limits:
          memory: "200Mi"
          cpu: 20m
      containers:
        - name: {{ .Values.logger.name }}
          image: {{ .Values.logger.image }}:{{ .Values.logger.tag }}
          env:
            - name: ACCEPT_EULA
              value: "Y"
            - name: SEQ_FIRSTRUN_ADMINPASSWORD
              value: {{ .Values.logger.defaultpassword }}
          ports:
            - containerPort: 80
          volumeMounts:
            - name: logger-data
              mountPath: /data   # path inside the container
      volumes:
        - name: logger-data
          persistentVolumeClaim:
            claimName: {{ .Values.logger.persistentVolumeClaim.name }}
{{ end }}       
---
apiVersion: v1
kind: Service
metadata:
  name: {{ .Values.logger.loadBalancer }}
  namespace: {{ .Values.namespace }}
spec:
  selector:
    app: {{ .Values.logger.app }}
    task: {{ .Values.logger.name }}
  ports:
    - protocol: TCP
      name: http
      port: 80
      targetPort: 80
  type: LoadBalancer
