apiVersion: v1
kind: ConfigMap
metadata:
  name: "{{ .Values.madtransfer.web.app }}-appsettings-config"
  namespace: {{ .Values.namespace }}
data:
  appsettings.json: |
    {
      "Local": {
        "Authority": "https://{{ .Values.keycloak.host }}/realms/madworld/",
        "ClientId": "mad-transfer-web",
        "ResponseType": "code"
      },
      "Api": {
        "Url": "https://{{ .Values.madtransfer.api.host }}/"
      }
    }
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: "{{ .Values.madtransfer.web.app }}-nginx-config"
  namespace: {{ .Values.namespace }}
data:
  default.conf: |
    server {
        listen       80;
        listen  [::]:80;
        server_name  localhost;
    
        add_header Strict-Transport-Security "max-age=31536000; includeSubDomains; preload" always;
        add_header X-Content-Type-Options "nosniff" always;
        add_header X-Frame-Options "SAMEORIGIN" always;
        add_header Referrer-Policy "no-referrer" always;
        add_header Permissions-Policy "accelerometer=(), camera=(), geolocation=(), gyroscope=(), magnetometer=(), microphone=(), payment=(), usb=()" always;
        add_header Content-Security-Policy "default-src 'self' https://{{ .Values.madtransfer.api.host }}; script-src 'self' 'unsafe-eval' 'wasm-unsafe-eval'; connect-src 'self' https://{{ .Values.madtransfer.api.host }} https://{{ .Values.keycloak.host }}; img-src 'self' data:; frame-src 'self' https://{{ .Values.keycloak.host }}" always;
    
        location / {
          root   /usr/share/nginx/html;
          try_files $uri $uri/ /index.html =404;
        }
    
        error_page   500 502 503 504  /50x.html;
        location = /50x.html {
          root   /usr/share/nginx/html;
        }
    }
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Values.madtransfer.web.deployment }}
  namespace: {{ .Values.namespace }}
  labels:
    app: {{ .Values.madtransfer.api.app }}
spec:
  replicas: 1
  selector:
    matchLabels:
      app: {{ .Values.madtransfer.web.app }}
      task: {{ .Values.madtransfer.web.name }}
  template:
    metadata:
      labels:
        app: {{ .Values.madtransfer.web.app }}
        task: {{ .Values.madtransfer.web.name }}
    spec:
      automountServiceAccountToken: false
      containers:
        - name: {{ .Values.madtransfer.web.name }}
          image: {{ .Values.madtransfer.web.image }}:{{ .Values.image.tag }}
          resources:
            requests:
              cpu: 100m
              memory: 100Mi
            limits:
              cpu: 100m
              memory: 100Mi
          env:
            - name: DatabaseSettings__Host
              value: "postgres-rw"
            - name: DatabaseSettings__Port
              value: "5432"
            - name: DatabaseSettings__DbName
              value: {{ .Values.database.dbName }}
            - name: DatabaseSettings__User
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.database.secret.name }}
                  key: username
            - name: DatabaseSettings__Password
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.database.secret.name }}
                  key: password
          volumeMounts:
            - name: "{{ .Values.madtransfer.web.app }}-appsettings-config-volume"
              mountPath: /usr/share/nginx/html/appsettings.json
              subPath: appsettings.json
              readOnly: true
            - name: "{{ .Values.madtransfer.web.app }}-nginx-config-volume"
              mountPath: /etc/nginx/conf.d/default.conf
              subPath: default.conf
              readOnly: true
          ports:
            - containerPort: 8080
      volumes:
        - name: "{{ .Values.madtransfer.web.app }}-appsettings-config-volume"
          configMap:
            name: "{{ .Values.madtransfer.web.app }}-appsettings-config"
        - name: "{{ .Values.madtransfer.web.app }}-nginx-config-volume"
          configMap:
            name: "{{ .Values.madtransfer.web.app }}-nginx-config"
---
apiVersion: v1
kind: Service
metadata:
  name: {{ .Values.madtransfer.web.loadBalancer }}
  namespace: {{ .Values.namespace }}
spec:
  selector:
    app: {{ .Values.madtransfer.web.app }}
    task: {{ .Values.madtransfer.web.name }}
  ports:
    - protocol: TCP
      name: http
      port: 80
      targetPort: 80
  type: LoadBalancer
  